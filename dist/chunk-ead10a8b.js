import { a as _objectSpread } from './chunk-039ee305.js';
import PropTypes__default from 'prop-types';

var AlignPT = PropTypes__default.oneOf(['top', 'middle', 'bottom']);
var SizePT = PropTypes__default.oneOf(['default', 'large', 'small']);
var StringOrNodePT = PropTypes__default.oneOfType([PropTypes__default.string, PropTypes__default.node]);
var StringOrNumberPT = PropTypes__default.oneOfType([PropTypes__default.number, PropTypes__default.string]);
var ButtonProps = {
  disabled: PropTypes__default.bool,
  ghost: PropTypes__default.bool,
  href: PropTypes__default.string,

  /** Button type via HTML */
  htmlType: PropTypes__default.string,
  icon: PropTypes__default.string,
  loading: PropTypes__default.bool,
  shape: PropTypes__default.oneOf(['circle', 'round']),
  size: SizePT,
  target: PropTypes__default.string,
  type: PropTypes__default.oneOf(['primary', 'ghost', 'dashed', 'danger', 'link']),
  onClick: PropTypes__default.func,
  block: PropTypes__default.bool
};
var ButtonPropsPT = PropTypes__default.shape(ButtonProps);
var InputProps = {
  addonAfter: StringOrNodePT,
  addonBefore: StringOrNodePT,
  defaultValue: PropTypes__default.string,
  disabled: PropTypes__default.bool,
  id: PropTypes__default.string,
  prefix: StringOrNodePT,
  size: SizePT,
  suffix: StringOrNodePT,
  type: PropTypes__default.string,
  value: PropTypes__default.string,
  onChange: PropTypes__default.func,
  onPressEnter: PropTypes__default.func,
  allowClear: PropTypes__default.bool
};
var InputPT = PropTypes__default.shape(_objectSpread({}, InputProps));
var JustifyPT = PropTypes__default.oneOf(['start', 'end', 'center', 'space-around', 'space-between']);
var SpacingPT = PropTypes__default.shape({
  xs: PropTypes__default.number,
  sm: PropTypes__default.number,
  md: PropTypes__default.number,
  lg: PropTypes__default.number
});
var RowPT = PropTypes__default.shape({
  align: AlignPT,
  gutter: SpacingPT,
  justify: JustifyPT,
  type: PropTypes__default.string
});

export { ButtonProps as B, InputProps as I, RowPT as R, StringOrNodePT as S, ButtonPropsPT as a, StringOrNumberPT as b };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmstZWFkMTBhOGIuanMiLCJzb3VyY2VzIjpbIi4uL3NyYy9wcm9wdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBUIGZyb20gJ3Byb3AtdHlwZXMnXG5cbmNvbnN0IEFsaWduUFQgPSBQVC5vbmVPZihbJ3RvcCcsICdtaWRkbGUnLCAnYm90dG9tJ10pXG5jb25zdCBTaXplUFQgPSBQVC5vbmVPZihbJ2RlZmF1bHQnLCAnbGFyZ2UnLCAnc21hbGwnXSlcbmV4cG9ydCBjb25zdCBTdHJpbmdPck5vZGVQVCA9IFBULm9uZU9mVHlwZShbUFQuc3RyaW5nLCBQVC5ub2RlXSlcbmV4cG9ydCBjb25zdCBTdHJpbmdPck51bWJlclBUID0gUFQub25lT2ZUeXBlKFtQVC5udW1iZXIsIFBULnN0cmluZ10pXG5cbmV4cG9ydCBjb25zdCBCdXR0b25Qcm9wcyA9IHtcbiAgZGlzYWJsZWQ6IFBULmJvb2wsXG4gIGdob3N0OiBQVC5ib29sLFxuICBocmVmOiBQVC5zdHJpbmcsXG4gIC8qKiBCdXR0b24gdHlwZSB2aWEgSFRNTCAqL1xuICBodG1sVHlwZTogUFQuc3RyaW5nLFxuICBpY29uOiBQVC5zdHJpbmcsXG4gIGxvYWRpbmc6IFBULmJvb2wsXG4gIHNoYXBlOiBQVC5vbmVPZihbJ2NpcmNsZScsICdyb3VuZCddKSxcbiAgc2l6ZTogU2l6ZVBULFxuICB0YXJnZXQ6IFBULnN0cmluZyxcbiAgdHlwZTogUFQub25lT2YoWydwcmltYXJ5JywgJ2dob3N0JywgJ2Rhc2hlZCcsICdkYW5nZXInLCAnbGluayddKSxcbiAgb25DbGljazogUFQuZnVuYyxcbiAgYmxvY2s6IFBULmJvb2xcbn1cblxuZXhwb3J0IGNvbnN0IEJ1dHRvblByb3BzUFQgPSBQVC5zaGFwZShCdXR0b25Qcm9wcylcblxuZXhwb3J0IGNvbnN0IElucHV0UHJvcHMgPSB7XG4gIGFkZG9uQWZ0ZXI6IFN0cmluZ09yTm9kZVBULFxuICBhZGRvbkJlZm9yZTogU3RyaW5nT3JOb2RlUFQsXG4gIGRlZmF1bHRWYWx1ZTogUFQuc3RyaW5nLFxuICBkaXNhYmxlZDogUFQuYm9vbCxcbiAgaWQ6IFBULnN0cmluZyxcbiAgcHJlZml4OiBTdHJpbmdPck5vZGVQVCxcbiAgc2l6ZTogU2l6ZVBULFxuICBzdWZmaXg6IFN0cmluZ09yTm9kZVBULFxuICB0eXBlOiBQVC5zdHJpbmcsXG4gIHZhbHVlOiBQVC5zdHJpbmcsXG4gIG9uQ2hhbmdlOiBQVC5mdW5jLFxuICBvblByZXNzRW50ZXI6IFBULmZ1bmMsXG4gIGFsbG93Q2xlYXI6IFBULmJvb2xcbn1cblxuZXhwb3J0IGNvbnN0IElucHV0UFQgPSBQVC5zaGFwZSh7XG4gIC4uLklucHV0UHJvcHNcbn0pXG5cbmNvbnN0IEp1c3RpZnlQVCA9IFBULm9uZU9mKFtcbiAgJ3N0YXJ0JyxcbiAgJ2VuZCcsXG4gICdjZW50ZXInLFxuICAnc3BhY2UtYXJvdW5kJyxcbiAgJ3NwYWNlLWJldHdlZW4nXG5dKVxuXG5leHBvcnQgY29uc3QgU3BhY2luZ1BUID0gUFQuc2hhcGUoe1xuICB4czogUFQubnVtYmVyLFxuICBzbTogUFQubnVtYmVyLFxuICBtZDogUFQubnVtYmVyLFxuICBsZzogUFQubnVtYmVyXG59KVxuXG5leHBvcnQgY29uc3QgUm93UFQgPSBQVC5zaGFwZSh7XG4gIGFsaWduOiBBbGlnblBULFxuICBndXR0ZXI6IFNwYWNpbmdQVCxcbiAganVzdGlmeTogSnVzdGlmeVBULFxuICB0eXBlOiBQVC5zdHJpbmdcbn0pXG4iXSwibmFtZXMiOlsiQWxpZ25QVCIsIlBUIiwib25lT2YiLCJTaXplUFQiLCJTdHJpbmdPck5vZGVQVCIsIm9uZU9mVHlwZSIsInN0cmluZyIsIm5vZGUiLCJTdHJpbmdPck51bWJlclBUIiwibnVtYmVyIiwiQnV0dG9uUHJvcHMiLCJkaXNhYmxlZCIsImJvb2wiLCJnaG9zdCIsImhyZWYiLCJodG1sVHlwZSIsImljb24iLCJsb2FkaW5nIiwic2hhcGUiLCJzaXplIiwidGFyZ2V0IiwidHlwZSIsIm9uQ2xpY2siLCJmdW5jIiwiYmxvY2siLCJCdXR0b25Qcm9wc1BUIiwiSW5wdXRQcm9wcyIsImFkZG9uQWZ0ZXIiLCJhZGRvbkJlZm9yZSIsImRlZmF1bHRWYWx1ZSIsImlkIiwicHJlZml4Iiwic3VmZml4IiwidmFsdWUiLCJvbkNoYW5nZSIsIm9uUHJlc3NFbnRlciIsImFsbG93Q2xlYXIiLCJJbnB1dFBUIiwiSnVzdGlmeVBUIiwiU3BhY2luZ1BUIiwieHMiLCJzbSIsIm1kIiwibGciLCJSb3dQVCIsImFsaWduIiwiZ3V0dGVyIiwianVzdGlmeSJdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHQyxrQkFBRSxDQUFDQyxLQUFILENBQVMsQ0FBQyxLQUFELEVBQVEsUUFBUixFQUFrQixRQUFsQixDQUFULENBQWhCO0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixrQkFBRSxDQUFDQyxLQUFILENBQVMsQ0FBQyxTQUFELEVBQVksT0FBWixFQUFxQixPQUFyQixDQUFULENBQWY7QUFDQSxJQUFhRSxjQUFjLEdBQUdILGtCQUFFLENBQUNJLFNBQUgsQ0FBYSxDQUFDSixrQkFBRSxDQUFDSyxNQUFKLEVBQVlMLGtCQUFFLENBQUNNLElBQWYsQ0FBYixDQUF2QjtBQUNQLElBQWFDLGdCQUFnQixHQUFHUCxrQkFBRSxDQUFDSSxTQUFILENBQWEsQ0FBQ0osa0JBQUUsQ0FBQ1EsTUFBSixFQUFZUixrQkFBRSxDQUFDSyxNQUFmLENBQWIsQ0FBekI7QUFFUCxJQUFhSSxXQUFXLEdBQUc7RUFDekJDLFFBQVEsRUFBRVYsa0JBQUUsQ0FBQ1csSUFEWTtFQUV6QkMsS0FBSyxFQUFFWixrQkFBRSxDQUFDVyxJQUZlO0VBR3pCRSxJQUFJLEVBQUViLGtCQUFFLENBQUNLLE1BSGdCOzs7RUFLekJTLFFBQVEsRUFBRWQsa0JBQUUsQ0FBQ0ssTUFMWTtFQU16QlUsSUFBSSxFQUFFZixrQkFBRSxDQUFDSyxNQU5nQjtFQU96QlcsT0FBTyxFQUFFaEIsa0JBQUUsQ0FBQ1csSUFQYTtFQVF6Qk0sS0FBSyxFQUFFakIsa0JBQUUsQ0FBQ0MsS0FBSCxDQUFTLENBQUMsUUFBRCxFQUFXLE9BQVgsQ0FBVCxDQVJrQjtFQVN6QmlCLElBQUksRUFBRWhCLE1BVG1CO0VBVXpCaUIsTUFBTSxFQUFFbkIsa0JBQUUsQ0FBQ0ssTUFWYztFQVd6QmUsSUFBSSxFQUFFcEIsa0JBQUUsQ0FBQ0MsS0FBSCxDQUFTLENBQUMsU0FBRCxFQUFZLE9BQVosRUFBcUIsUUFBckIsRUFBK0IsUUFBL0IsRUFBeUMsTUFBekMsQ0FBVCxDQVhtQjtFQVl6Qm9CLE9BQU8sRUFBRXJCLGtCQUFFLENBQUNzQixJQVphO0VBYXpCQyxLQUFLLEVBQUV2QixrQkFBRSxDQUFDVztDQWJMO0FBZ0JQLElBQWFhLGFBQWEsR0FBR3hCLGtCQUFFLENBQUNpQixLQUFILENBQVNSLFdBQVQsQ0FBdEI7QUFFUCxJQUFhZ0IsVUFBVSxHQUFHO0VBQ3hCQyxVQUFVLEVBQUV2QixjQURZO0VBRXhCd0IsV0FBVyxFQUFFeEIsY0FGVztFQUd4QnlCLFlBQVksRUFBRTVCLGtCQUFFLENBQUNLLE1BSE87RUFJeEJLLFFBQVEsRUFBRVYsa0JBQUUsQ0FBQ1csSUFKVztFQUt4QmtCLEVBQUUsRUFBRTdCLGtCQUFFLENBQUNLLE1BTGlCO0VBTXhCeUIsTUFBTSxFQUFFM0IsY0FOZ0I7RUFPeEJlLElBQUksRUFBRWhCLE1BUGtCO0VBUXhCNkIsTUFBTSxFQUFFNUIsY0FSZ0I7RUFTeEJpQixJQUFJLEVBQUVwQixrQkFBRSxDQUFDSyxNQVRlO0VBVXhCMkIsS0FBSyxFQUFFaEMsa0JBQUUsQ0FBQ0ssTUFWYztFQVd4QjRCLFFBQVEsRUFBRWpDLGtCQUFFLENBQUNzQixJQVhXO0VBWXhCWSxZQUFZLEVBQUVsQyxrQkFBRSxDQUFDc0IsSUFaTztFQWF4QmEsVUFBVSxFQUFFbkMsa0JBQUUsQ0FBQ1c7Q0FiVjtBQWdCUCxBQUFPLElBQU15QixPQUFPLEdBQUdwQyxrQkFBRSxDQUFDaUIsS0FBSCxtQkFDbEJRLFVBRGtCLEVBQWhCO0FBSVAsSUFBTVksU0FBUyxHQUFHckMsa0JBQUUsQ0FBQ0MsS0FBSCxDQUFTLENBQ3pCLE9BRHlCLEVBRXpCLEtBRnlCLEVBR3pCLFFBSHlCLEVBSXpCLGNBSnlCLEVBS3pCLGVBTHlCLENBQVQsQ0FBbEI7QUFRQSxBQUFPLElBQU1xQyxTQUFTLEdBQUd0QyxrQkFBRSxDQUFDaUIsS0FBSCxDQUFTO0VBQ2hDc0IsRUFBRSxFQUFFdkMsa0JBQUUsQ0FBQ1EsTUFEeUI7RUFFaENnQyxFQUFFLEVBQUV4QyxrQkFBRSxDQUFDUSxNQUZ5QjtFQUdoQ2lDLEVBQUUsRUFBRXpDLGtCQUFFLENBQUNRLE1BSHlCO0VBSWhDa0MsRUFBRSxFQUFFMUMsa0JBQUUsQ0FBQ1E7Q0FKZ0IsQ0FBbEI7QUFPUCxJQUFhbUMsS0FBSyxHQUFHM0Msa0JBQUUsQ0FBQ2lCLEtBQUgsQ0FBUztFQUM1QjJCLEtBQUssRUFBRTdDLE9BRHFCO0VBRTVCOEMsTUFBTSxFQUFFUCxTQUZvQjtFQUc1QlEsT0FBTyxFQUFFVCxTQUhtQjtFQUk1QmpCLElBQUksRUFBRXBCLGtCQUFFLENBQUNLO0NBSlUsQ0FBZDs7OzsifQ==
